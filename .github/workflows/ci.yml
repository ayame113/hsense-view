name: ci

on: [push, pull_request]

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Module
        uses: actions/checkout@v2
      - name: Use Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: 😉 Format
        run: deno fmt --check
      - name: 😋 Lint
        run: deno lint
  Type-Check:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Module
        uses: actions/checkout@v2
      - name: Use Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: 🧐 Type Check
        run: deno test --no-run --no-check=remote ./dev/typecheck.ts
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout Module
        uses: actions/checkout@v2
      - name: Use Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: 😎 Test
        env:
          FIREBASE_CONFIG_TEST: ${{secrets.FIREBASE_CONFIG_TEST}}
          #DENO_SQLITE_PATH: "./db/sqlite_dll/sqlite3.dll"
        run: deno test --allow-net --allow-env=FIREBASE_CONFIG_TEST,DENO_SQLITE_PATH --allow-read=. --allow-write=. --allow-ffi --unstable --coverage=coverage --jobs
      - name: Create coverage report
        run: deno coverage ./coverage --lcov > coverage.lcov
      - name: Codecov
        uses: codecov/codecov-action@v1.5.2
        with:
          file: ./coverage.lcov
          fail_ci_if_error: true
